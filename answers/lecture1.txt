1. каким образом реализована идея “Everything is Object”, в чем этом выражается?
Все сущности ядра реализованы в виде объектов, ядро предоставляет базовые объекты (поток, задача, файл), механизмы по взаимодействию между объектами (отправить сообщение, создать IPC шлюз), а так же даёт возможность для создания допольнительных пользовательских объектов.

2. Что такое Capability list, зачем он нужен?
Это защищенный список объектов, с которыми может взаимодействовать текущий процесс. Он нужен для того, чтобы процессы могли взаимодействовать только с теми объектами, с которыми им разрешено и не пытались перебирать с помощью брутфорса адреса объектов в системе.

3. Где находится scheduler и почему?
В ядре, хотя это и не подходит под концепцию micro-kernel, потому что только таким образом можно добиться хорошего быстродействия.

4. Что такое Sigma0, Moe, Ned, и зачем они нужны?
Ned - загрузчик задач.
Moe, Sigma0 - сервисы управления ресурсами

5. Что собой представляет L4Re?
Рантайм енвайромент. Состоит из менеджмента ресурсов, загрузчика задач, клиент-серверного фреймворка и набора системных библиотек.

6. Что является execution unit в концепции Fiasco.OC ?
Thread

7. Что такое TCB, чет отличается от UTCB, что такое Kernel Info Block, где находится каждая из этих структур, зачем она нужна и как с ними можно работать?
Thread control block - структура, используемая ядром для сохранения параметров потока, таких как: регистры потока, указатель на текущую выполняемую команду(instruction pointer), указатель на стек. Находится в ядре. Нужна для того, чтобы можно было переключать потоки с сохранением их состояния.
User level thread control block - расширение TCB, содержащие информацию, которой ядро не обязательно должно доверять. Находится в ядре, но промаплено в юзер спейс. Используется для совершения системных вызовов. Интерфейс по доступу к UTCB лежит в l4/re/env.h или в l4/sys/ipc.h
Kernel Info Page - это структура, загружаемая в память каждой задачи, которая содержит информацию о версии ядра, его возможностях, а так же содержит код перехода в режим ядра. Находится в User space.

8. Какие механизмы сериализации доступа к переменным были озвучены в лекции?
Запрет прерывания (нельзя из юзер мода), спинлоки, мютекс, использование дополнительного потока для сериализации.

9. Что делает и зачем нужны l4_msgtag и l4_ipc_send?
l4_ipc_send делает IPC запрос к объекту. Все системные вызовы совершаются через IPC запросы
l4_msgtag задает параметры IPC запроса, такие как протокол (например file server протокол), а так же указывает сколько слов в UTCB было записано.